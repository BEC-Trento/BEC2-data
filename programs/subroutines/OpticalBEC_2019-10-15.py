prg_comment = ""
prg_version = "0.7"
def program(prg, cmd):
    prg.add(0, "Initialize 0 TTL and Synchronize.sub")
    prg.add(150000, "Config field OFF")
    prg.add(160000, "[test] Degauss_1012")
    prg.add(12160000, "Set_MOT")
    prg.add(112160000, "Switch Off MOT_fast")
    prg.add(112161250, "GM_051018")
    prg.add(112163150, "DAC MT-MOT Current", 0.0000, functions=dict(value=lambda x: cmd.get_var('MT_I')))
    prg.add(112163649, "DAC MT-MOT Voltage", 0.0000, functions=dict(value=lambda x: cmd.get_var('MT_Voltage')))
    prg.add(112216750, "wait")
    prg.add(112217750, "Config Field MT-MOT")
    prg.add(112218750, "DAC Horiz IR", 0.0000, functions=dict(value=lambda x: cmd.get_var('CigarV')))
    prg.add(112219250, "AOM IR Horizontal Amp", 1000)
    prg.add(112219750, "AOM IR Horizontal freq", 80.00)
    prg.add(112220250, "DAC Vert IR", 2.0000, functions=dict(value=lambda x: cmd.get_var('XaxisTrap_V')))
    prg.add(112220750, "AOM IR Vertical Amp", 1000)
    prg.add(112221250, "AOM IR Vertical freq", 80.00)
    prg.add(112222500, "IGBT BCompY CLOSE")
    prg.add(112223250, "DAC BCompY", 0.4160, functions=dict(value=lambda x: cmd.get_var('BCompY_value')*30.0/18.))
    prg.add(112722500, "DAC MT-MOT Voltage", 8.5000)
    prg.add(114222500, "MT Current Ramp", start_t=0, stop_x=0, n_points=100, start_x=24, stop_t=500, functions=dict(start_x=lambda x: cmd.get_var('MT_I'), stop_x=lambda x: cmd.get_var('MT_I_final')))
    prg.add(114223250, "BCompY current ramp", start_t=0, stop_x=0.15, n_points=100, start_x=0.416, stop_t=500, functions=dict(start_x=lambda x: cmd.get_var('BCompY_value')*30.0/18., stop_x=lambda x: cmd.get_var('BCompY_value')*50.0/18.))
    prg.add(152722500, "MT Current Ramp", start_t=0, stop_x=18, n_points=500, start_x=0, stop_t=500, functions=dict(start_x=lambda x: cmd.get_var('MT_I_final')))
    prg.add(152723500, "BCompY current ramp", start_t=0, stop_x=0, n_points=500, start_x=0, stop_t=500, functions=dict(start_x=lambda x: cmd.get_var('BCompY_value')*50.0/18., stop_x=lambda x: cmd.get_var('BCompY_value')))
    prg.add(152723500, "MT Current HalfGauss ramp", start_t=0.0000, func_args="a=50, b=18, duration=3, width=2", n_points=500, func="(a - b * exp(-duration**2 / width**2)) / (1 - exp(-duration**2 / width**2)) + ((b - a) / (1 - exp(-duration**2 / width**2))) * exp(-(t - duration)**2 / width**2)", stop_t=3000.0000, functions=dict(func_args=lambda x: "a={}, b=18, duration=3000, width=1".format(cmd.get_var('MT_I_final')), funct_enable=False), enable=False)
    prg.add(157733500, "Horizontal Dipole Evaporation Ramp_Truncated")
    prg.add(177636600, "transfer_to_optical_trap")
    prg.add(188338700, "Synchronize.sub", enable=False)
    prg.add(188386200, "field_lock", enable=False)
    prg.add(188786200, "field_lock", functions=dict(time=lambda x: x + cmd.get_var('hold_time')), enable=False)
    prg.add(188836100, "DAC 100W_amplitude", 0.2000, functions=dict(time=lambda x: x + cmd.get_var('hold_time')), enable=False)
    prg.add(188966439, "Oscilloscope Trigger ON", functions=dict(time=lambda x: x + cmd.get_var('hold_time')), enable=False)
    prg.add(188976200, "Switch Off Dipole", functions=dict(time=lambda x: x + cmd.get_var('hold_time')), enable=False)
    prg.add(190086440, "DAC Horiz IR Exp ramp", start_t=0.0000, func_args="a=0.6, b=0.06, duration=1, tau=0.2", n_points=1500, func="(b - a * exp(-duration / tau) + (a - b) * exp(-t / tau)) / (1 - exp(-duration / tau))", stop_t=1000.0000, functions=dict(func_args=lambda x: 'a={0}, b={1}, duration=1, tau=0.2'.format(0.6, cmd.get_var('Cigar_end'))))
    prg.add(190088940, "Oscilloscope Trigger ON", enable=False)
    prg.add(200100000, "IR Horizontal HalfGauss ramp", start_t=0.0000, func_args="a=0, b=1, duration=1, width=0.5", n_points=200, func="(a - b * exp(-duration**2 / width**2)) / (1 - exp(-duration**2 / width**2)) + ((b - a) / (1 - exp(-duration**2 / width**2))) * exp(-(t - duration)**2 / width**2)", stop_t=1000.0000, functions=dict(func_args=lambda x: 'a={0}, b={1}, duration=1, width=0.5'.format(cmd.get_var('Cigar_end'), cmd.get_var('Cigar_compressed'))))
    prg.add(210101000, "wait")
    return prg
